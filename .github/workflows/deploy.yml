name: Deploy to Production

on:
  release:
    types: [published]

env:
  NODE_VERSION: '22'

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Node dependencies
        run: npm ci

      - name: Build frontend assets
        run: npm run build

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to server via rsync
        run: |
          # Deploy files using rsync
          rsync -avz --delete \
            --exclude-from='.deployignore' \
            --exclude='.git/' \
            --exclude='.github/' \
            --exclude='node_modules/' \
            --exclude='.env*' \
            --exclude='tests/' \
            --exclude='storage/logs/*' \
            --exclude='storage/framework/cache/data/*' \
            --exclude='storage/framework/sessions/*' \
            --exclude='storage/framework/views/*' \
            --exclude='bootstrap/cache/*' \
            -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
            ./ ${{ secrets.USERNAME }}@${{ secrets.HOST }}:${{ secrets.DEPLOY_PATH }}/

          echo "🚀 Files synced successfully!"

      - name: Clear Laravel optimized caches
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
            cd ${{ secrets.DEPLOY_PATH }}
            php artisan optimize:clear
            echo "✅ Laravel caches cleared!"
          EOF

      - name: Copy frontend build to public directory
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
            cd ${{ secrets.DEPLOY_PATH }}
            cp -r public/build/* ../public_html/
            echo "✅ Frontend build copied to public directory!"
          EOF

      - name: Cleanup SSH
        if: always()
        run: |
          rm -f ~/.ssh/id_rsa

      - name: Notify deployment status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "🚀 Frontend built and files synced to production successfully!"
          else
            echo "❌ Deployment to production failed!"
          fi
